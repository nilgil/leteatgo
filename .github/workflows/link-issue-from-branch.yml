name: 'PR Description Automation'

# PR이 생성되었을 때만 이 워크플로우를 실행합니다.
on:
  pull_request:
    types: [opened]

jobs:
  add-issue-to-description:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      # 1. 브랜치 이름에서 이슈 번호(숫자)를 추출합니다.
      - name: 'Get Issue Number from Branch Name'
        id: get_issue_number
        run: |
          # github.head_ref는 현재 PR의 소스 브랜치 이름을 담고 있습니다.
          # 예: feature/123-login -> 123
          BRANCH_NAME="${{ github.head_ref }}"
          ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oE '[0-9]+')
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT

      # 2. 추출한 이슈 번호가 있을 경우에만 PR 설명을 업데이트합니다.
      - name: 'Update PR Description'
        if: steps.get_issue_number.outputs.issue_number
        uses: actions/github-script@v7
        with:
          script: |
            // 이전 스텝에서 추출한 이슈 번호
            const issueNumber = '${{ steps.get_issue_number.outputs.issue_number }}';

            // 현재 PR의 정보
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const currentBody = pullRequest.body || '';
            const closingStatement = `Closes #${issueNumber}`;

            // 이미 Closes 구문이 포함되어 있다면 중복 추가하지 않습니다.
            if (currentBody.includes(closingStatement)) {
              console.log('PR description already contains the closing statement.');
              return;
            }

            // 새로운 PR 설명 생성 (Closes 구문을 맨 위에 추가)
            const newBody = `${closingStatement}\n\n${currentBody}`;

            // PR 설명 업데이트 API 호출
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: newBody
            });

            console.log(`Successfully updated PR description with "${closingStatement}".`);